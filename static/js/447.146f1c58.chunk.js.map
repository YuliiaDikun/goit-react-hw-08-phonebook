{"version":3,"file":"static/js/447.146f1c58.chunk.js","mappings":"6QACaA,EAAQC,EAAAA,GAAAA,GAAH,+GACE,qBAAGC,MAAkBC,QAAQ,EAA7B,IACL,qBAAGD,MAAkBC,QAAQ,GAA7B,IAIFC,EAAOH,EAAAA,GAAAA,GAAH,sHAMJI,EAAOJ,EAAAA,GAAAA,GAAH,kNAQY,qBAAGC,MAAkBI,OAAOC,KAA5B,IAEhBC,EAAUP,EAAAA,GAAAA,KAAH,2CACL,qBAAGC,MAAkBC,QAAQ,EAA7B,IAEFM,EAASR,EAAAA,GAAAA,OAAH,oRAEG,qBAAGC,MAAkBI,OAAOI,IAA5B,IAGT,qBAAGR,MAAkBC,QAAQ,EAA7B,IAUAQ,EAAUV,EAAAA,GAAAA,EAAH,mJACH,qBAAGC,MAAkBC,QAAQ,EAA7B,IACG,qBAAGD,MAAkBC,QAAQ,EAA7B,IACL,qBAAGD,MAAkBC,QAAQ,EAA7B,IAGJ,qBAAGD,MAAkBI,OAAOI,IAA5B,IAEEE,EAAOX,EAAAA,GAAAA,KAAH,iGAKJY,EAASZ,EAAAA,GAAAA,KAAH,4C,SCxCNa,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,KAAnB,IAC5BC,GAASH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAME,OAAOC,MAAjB,IAC1BC,EAAkBN,EAASI,QAAO,SAAAG,GAAO,OAC7CA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,cADE,IAG/C,OACE,iCACE,SAAC1B,EAAD,oCACCuB,EAAgBK,QACf,SAACxB,EAAD,UACGmB,EAAgBM,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIL,EAAmB,EAAnBA,KAAMM,EAAa,EAAbA,OAChC,OACE,UAAC1B,EAAD,YACE,UAACG,EAAD,YACE,SAACI,EAAD,UAAOa,KAAY,SAAC,EAAD,UAASM,QAG9B,SAACtB,EAAD,CACEuB,QAAS,WACPjB,GAASkB,EAAAA,EAAAA,IAAcH,GACxB,EACDI,KAAK,SAJP,sBALSJ,EAed,OAGH,SAACnB,EAAD,8BAIP,E,8BC/CYwB,EAAUlC,EAAAA,GAAAA,IAAH,oHAEJ,qBAAGC,MAAkBC,QAAQ,GAA7B,IACG,qBAAGD,MAAkBC,QAAQ,GAA7B,IACG,qBAAGD,MAAkBI,OAAO8B,IAA5B,IAGTC,EAAQpC,EAAAA,GAAAA,MAAH,6WAIH,qBAAGC,MAAkBC,QAAQ,EAA7B,IACH,qBAAGD,MAAkBC,QAAQ,EAA7B,IACM,qBAAGD,MAAkBC,QAAQ,EAA7B,IACC,qBAAGD,MAAkBC,QAAQ,EAA7B,IAIG,qBAAGD,MAAkBI,OAAO8B,IAA5B,IAGTE,GAAQrC,EAAAA,EAAAA,IAAOsC,EAAAA,GAAPtC,CAAH,6UAEL,qBAAGC,MAAkBC,QAAQ,EAA7B,IAEE,qBAAGD,MAAkBC,QAAQ,EAA7B,IAGO,qBAAGD,MAAkBI,OAAO8B,IAA5B,IAUTI,EAAYvC,EAAAA,GAAAA,EAAH,0DACP,qBAAGC,MAAkBC,QAAQ,EAA7B,IAIFM,EAASR,EAAAA,GAAAA,OAAH,8TAEG,qBAAGC,MAAkBI,OAAOC,KAA5B,IAKX,qBAAGL,MAAkBI,OAAOC,KAA5B,IC7CEkC,EAAY,WACvB,IAAM1B,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,KAAnB,IAE5BsB,EAAY,SAAC,GAAc,IAAZjB,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNkB,OAAQ,SAAAC,GAAO,OAAI,SAACJ,EAAD,UAAYI,GAAhB,GAGpB,EAOKC,EAAcC,EAAAA,KAAaC,MAAM,CACrCtB,KAAMqB,EAAAA,KAEHE,QACC,yHACA,0IAEDC,WACHlB,OAAQe,EAAAA,KAELE,QACC,6EACA,gGAEDC,aAkBL,OACE,SAAC,KAAD,CACEC,cAvCkB,CACpBzB,KAAM,GACNM,OAAQ,IAsCNoB,iBAAkBN,EAClBO,SAnBiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACxBC,EAAWtC,EAASuC,MAAK,SAAAhC,GAAO,OAAIA,EAAQC,OAAS4B,EAAO5B,IAA5B,IACtC,GAAI8B,EACFE,MAAM,wBADR,CAIA,IAAMjC,EAAU,CACdC,KAAM4B,EAAO5B,KACbM,OAAQsB,EAAOtB,OACfD,IAAI4B,EAAAA,EAAAA,OAEN3C,GAAS4C,EAAAA,EAAAA,IAAWnC,IACpB8B,GAPC,CAQF,EAGC,UAKE,UAAC,KAAD,CAAMM,aAAa,MAAnB,WACE,UAACzB,EAAD,YACE,SAACG,EAAD,CAEEJ,KAAK,OACLT,KAAK,OACLK,GAAG,OACH+B,YAAY,MAJPH,EAAAA,EAAAA,QAMP,SAACrB,EAAD,CAAOyB,QAAQ,OAAf,oBACA,SAACpB,EAAD,CAAWjB,KAAK,aAElB,UAACU,EAAD,YACE,SAACG,EAAD,CAEEJ,KAAK,MACLT,KAAK,SACLK,GAAG,SACH+B,YAAY,MAJPH,EAAAA,EAAAA,QAMP,SAACrB,EAAD,CAAOyB,QAAQ,SAAf,sBACA,SAACpB,EAAD,CAAWjB,KAAK,eAGlB,SAACU,EAAD,WACE,SAAC,EAAD,CAAQD,KAAK,SAAb,+BAKT,EC7FY6B,EAAe,SAAA5C,GAAK,OAAIA,EAAMF,SAAS+C,SAAnB,ECOlB,SAASC,IACtB,IAAMlD,GAAWC,EAAAA,EAAAA,MACXgD,GAAY9C,EAAAA,EAAAA,IAAY6C,GAM9B,OAJAG,EAAAA,EAAAA,YAAU,WACRnD,GAASoD,EAAAA,EAAAA,MACV,GAAE,CAACpD,KAGF,iCACE,SAACqD,EAAA,EAAD,WACE,gDAEF,SAAC3B,EAAD,KACA,yBAAMuB,GAAa,4BACnB,SAAClD,EAAD,MAGL,C","sources":["components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Form/Forms.styled.js","components/Form/Form.jsx","redux/contacts/selectors.js","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const Title = styled.h2`\n  padding-bottom: ${({ theme }) => theme.spacing(3)};\n  font-size: ${({ theme }) => theme.spacing(10)};\n  font-weight: 700;\n  text-align: center;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  justify-content: space-between;\n`;\nexport const Item = styled.li`\n  display: flex;\n  width: 100%;\n  gap: 10px;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 4px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.white};\n`;\nexport const Contact = styled.span`\n  font-size: ${({ theme }) => theme.spacing(6)};\n`;\nexport const Button = styled.button`\n  background: none;\n  border: 2px solid ${({ theme }) => theme.colors.grey};\n  border-radius: 50%;\n  font: inherit;\n  padding: ${({ theme }) => theme.spacing(2)};\n  cursor: pointer;\n  transition: 0.25s;\n  &:hover,\n  &:focus {\n    box-shadow: 0 0.5em 0.5em -0.4em #ffa260;\n    transform: scale(1.1);\n  }\n`;\n\nexport const Warning = styled.p`\n  padding-top: ${({ theme }) => theme.spacing(3)};\n  padding-bottom: ${({ theme }) => theme.spacing(3)};\n  font-size: ${({ theme }) => theme.spacing(6)};\n  font-weight: 700;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.grey};\n`;\nexport const Name = styled.span`\n  text-transform: uppercase;\n  font-size: 32px;\n  margin-right: 40px;\n`;\nexport const Number = styled.span`\n  font-size: 32px;\n`;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  Title,\n  List,\n  Item,\n  Contact,\n  Button,\n  Warning,\n  Name,\n  Number\n} from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter.status);\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    <>\n      <Title>Contacts 📃</Title>\n      {visibleContacts.length ? (\n        <List>\n          {visibleContacts.map(({ id, name, number }) => {\n            return (\n              <Item key={id}>\n                <Contact>\n                  <Name>{name}</Name><Number>{number}</Number> \n                </Contact>\n\n                <Button\n                  onClick={() => {\n                    dispatch(deleteContact(id));\n                  }}\n                  type=\"button\"\n                >\n                  ❌\n                </Button>\n              </Item>\n            );\n          })}\n        </List>\n      ) : (\n        <Warning>No results...</Warning>\n      )}\n    </>\n  );\n};\n\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  margin-top: ${({ theme }) => theme.spacing(10)};\n  margin-bottom: ${({ theme }) => theme.spacing(10)};\n  background-color: ${({ theme }) => theme.colors.dark};\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-size: ${({ theme }) => theme.spacing(7)};\n  margin: ${({ theme }) => theme.spacing(2)};\n  padding-left: ${({ theme }) => theme.spacing(2)};\n  padding-right: ${({ theme }) => theme.spacing(2)};\n  background-color: transparent;\n  -webkit-transition: top 0.2s ease-in-out, font-size 0.2s ease-in-out;\n  transition: top 0.2s ease-in-out, font-size 0.2s ease-in-out;\n  background-color: ${({ theme }) => theme.colors.dark};\n  color: white;\n`;\nexport const Input = styled(Field)`\n  width: 100%;\n  padding: ${({ theme }) => theme.spacing(4)};\n  border: 1px solid white;\n  font-size: ${({ theme }) => theme.spacing(5)};\n  background-color: transparent;\n  color: white;\n  background-color: ${({ theme }) => theme.colors.dark};\n  &:focus {\n    outline: 1px solid white;\n  }\n  &:focus + Label,\n  &:not(:placeholder-shown) + Label {\n    top: -25px;\n    font-size: 20px;\n  }\n`;\nexport const ErrorMess = styled.p`\n  font-size: ${({ theme }) => theme.spacing(3)};\n  color: red;\n`;\n\nexport const Button = styled.button`\n  background: none;\n  border: 2px solid ${({ theme }) => theme.colors.white};\n  font: inherit;\n  line-height: 1;\n  margin: 0.5em;\n  padding: 1em 2em;\n  color: ${({ theme }) => theme.colors.white};\n  transition: 0.25s;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    box-shadow: 0 0.5em 0.5em -0.4em #ffa260;\n    transform: translateY(-0.25em);\n  }\n`;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { Label, Input, Wrapper, ErrorMess, Button } from './Forms.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorMess>{message}</ErrorMess>}\n      />\n    );\n  };\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const phoneSchema = yup.object().shape({\n    name: yup\n      .string()\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      )\n      .required(),\n    number: yup\n      .string()\n      .matches(\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .required(),\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    const isAtList = contacts.find(contact => contact.name === values.name);\n    if (isAtList) {\n      alert('Already in list!');\n      return;\n    }\n    const contact = {\n      name: values.name,\n      number: values.number,\n      id: nanoid(),\n    };    \n    dispatch(addContact(contact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={phoneSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <Wrapper>\n          <Input\n            key={nanoid()}\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\" \"\n          />\n          <Label htmlFor=\"name\"> Name</Label>\n          <FormError name=\"name\" />\n        </Wrapper>\n        <Wrapper>\n          <Input\n            key={nanoid()}\n            type=\"tel\"\n            name=\"number\"\n            id=\"number\"\n            placeholder=\" \"\n          />\n          <Label htmlFor=\"number\"> Number</Label>\n          <FormError name=\"number\" />\n        </Wrapper>\n\n        <Wrapper>\n          <Button type=\"submit\">Add contact</Button>\n        </Wrapper>\n      </Form>\n    </Formik>\n  );\n};\n\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getStatusFilter = state => state.filter.status;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { LoginForm } from 'components/Form/Form';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/selectors'; \n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <LoginForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactsList />\n    </>\n  );\n}"],"names":["Title","styled","theme","spacing","List","Item","colors","white","Contact","Button","grey","Warning","Name","Number","ContactsList","dispatch","useDispatch","contacts","useSelector","state","items","filter","status","visibleContacts","contact","name","toLowerCase","includes","length","map","id","number","onClick","deleteContact","type","Wrapper","dark","Label","Input","Field","ErrorMess","LoginForm","FormError","render","message","phoneSchema","yup","shape","matches","required","initialValues","validationSchema","onSubmit","values","resetForm","isAtList","find","alert","nanoid","addContact","autoComplete","placeholder","htmlFor","getIsLoading","isLoading","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}